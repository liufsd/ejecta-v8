// Top-level build file where you can add configuration options common to all sub-projects/modules.
buildscript {
    ext.kotlin_version = '1.3.61'
    repositories {
        mavenCentral()
        jcenter()
        google()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:3.5.3'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath 'com.github.dcendents:android-maven-gradle-plugin:2.1'
        classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.7.3'
    }
}

apply plugin: 'com.github.dcendents.android-maven'
apply plugin: 'com.jfrog.bintray'
apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion 29
    buildToolsVersion "29.0.2"

    defaultConfig {
        minSdkVersion 21
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"
        consumerProguardFiles 'proguard-rules.txt'
        externalNativeBuild {
            cmake {
                arguments "-DANDROID_STL=c++_static"
                // In case you need to see the build commands used by CMake, try
                // arguments "-DANDROID_STL=c++_static", "-DCMAKE_VERBOSE_MAKEFILE:BOOL=ON"
                abiFilters 'x86', 'armeabi-v7a', 'arm64-v8a', 'x86_64'
            }
        }
        ndk {
            abiFilters 'x86', 'armeabi-v7a', 'arm64-v8a', 'x86_64'
            stl 'c++_static'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    externalNativeBuild {
        cmake {
            path "CMakeLists.txt"
        }
    }
}

repositories {
    mavenCentral()
    jcenter()
    flatDir {
        dirs 'libs'
    }
    maven { url "https://jitpack.io" }
    google()
}

dependencies {
    implementation fileTree(dir: 'libs', include: '*.jar')
    implementation 'com.squareup.okhttp3:okhttp:4.2.2'
    compileOnly "androidx.annotation:annotation:1.1.0"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    kapt project(path: ':ejecta-v8:v8annotations-compiler')
    api project(path: ':ejecta-v8:v8annotations')
    api 'com.github.franmontiel:PersistentCookieJar:v1.0.1'
}

task distributeDebug() {
    doFirst {
        delete "dist/debug"
        mkdir "dist/debug/jni"
        copy {
            from "build/intermediates/cmake/debug/obj"
            into "dist/debug/jni"
        }
    }
}

task distributeRelease {

    doFirst {
        /* println("LS")
        def list = []

        def dir = new File("ejecta-v8/build/intermediates/cmake/release/obj")
        dir.eachFileRecurse (FileType.FILES) { file ->
            list << file
        }
        list.each {
            println it.path
        } */
        delete "dist/release"
        mkdir "dist/release/jni"
        copy {
            from "build/intermediates/cmake/release/obj"
            into "dist/release/jni"
        }
    }
}

afterEvaluate {
    transformNativeLibsWithIntermediateJniLibsForDebug.finalizedBy distributeDebug
    transformNativeLibsWithIntermediateJniLibsForRelease.finalizedBy distributeRelease
}

// Upload to bintray

group = 'de.boersego'
version = '1.0.0'

install {
    repositories.mavenInstaller {
        pom.project {
            name 'Ejecta-V8'
            description 'Embed Googles v8 into your Android app and have access to high-speed canvas, AJAX and websocket implementations as well as a powerful abstraction layer to add your own extensions. Comes with a Kotlin interface.'
            url 'https://github.com/godmodelabs/ejecta-v8'
            inceptionYear '2013'

            packaging 'aar'
            groupId 'de.boersego'
            artifactId 'ejecta-v8'
            version '1.0.0'

            licenses {
                license {
                    name 'The MIT License (MIT)'
                    url 'https://opensource.org/licenses/MIT'
                }
            }
            scm {
                connection 'https://github.com/godmodelabs/ejecta-v8.git'
                url 'https://github.com/godmodelabs/ejecta-v8'

            }
            developers {
                developer {
                    id = 'unverbraucht'
                    name 'Kevin Read'
                }
            }
        }
    }
}

Properties bintrayProperties = new Properties()
bintrayProperties.load(project.file('bintray.properties').newDataInputStream())

bintray {
    user = bintrayProperties.getProperty('user')
    key = bintrayProperties.get('key')
    configurations = ['archives']
    pkg {
        repo = 'ejecta-v8'
        name = 'ejecta-v8'
        licenses = ['MIT']
        vcsUrl = 'https://github.com/godmodelabs/ejecta-v8.git'
        publish = true
        version {
            name = '1.0.0'
            desc = 'Ejecta-V8 1.0.0'
            released = new Date()
            vcsTag = 'v1.0.0'
        }
    }
}
